---
const navLinks = [
  {
    href: "/programs"
  },
  {
    href: "/courses"
  },
  {
    href: "/facilities"
  },
  {
    href: "/blogs"
  }
]
const dropLinks = [
  {
    href: "/peoples"
  },
  {
    href: "/about"
  },
  {
    href: "/contact"
  }
]
---

{Astro.url}
<nav>
  <div class="container">
    <a class="cs-logo" aria-label="KSKVKU" href="/" title="CS-KSKVKU | Home"
      ><img
        width="350"
        height="31"
        src="/logo_kskvku_new.webp"
        alt="KSKVKU Logo"
        class="black"
      /><img
        width="350"
        height="31"
        src="/logo_kskvku_new_white.webp"
        alt="KSKVKU Logo"
        class="white"
      />
    </a>
    <div class="theme">
      <div class="inner">
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="24"
          height="24"
          viewBox="0 0 24 24"
          fill="#fff"
          stroke="#fff"
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"
          class="sun"
          ><circle cx="12" cy="12" r="4"></circle><path d="M12 2v2"></path><path
            d="M12 20v2"></path><path d="m4.93 4.93 1.41 1.41"></path><path
            d="m17.66 17.66 1.41 1.41"></path><path d="M2 12h2"></path><path
            d="M20 12h2"></path><path d="m6.34 17.66-1.41 1.41"></path><path
            d="m19.07 4.93-1.41 1.41"></path></svg
        >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="24"
          height="24"
          viewBox="0 0 24 24"
          fill="#000"
          class="moon"><path d="M12 3a6 6 0 0 0 9 9 9 9 0 1 1-9-9Z"></path></svg
        >
      </div>
    </div>
    <div class="hamburger">
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="24"
        height="24"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
        stroke-linecap="round"
        stroke-linejoin="round"
      >
        <line x1="4" x2="20" y1="10" y2="10"></line>
        <line x1="4" x2="20" y1="16" y2="16"></line>
      </svg>
    </div>
    <ul class="navUl">
      <li>
        <a class={Astro.url.pathname === "/" && "active"} href="/"> Home</a>
      </li>
      {
        navLinks.map(link => {
          const text = link.href.split("/")[1]
          return (
            <li>
              <a
                class={Astro.url.pathname.includes(link.href) && "active"}
                href={link.href}
              >
                {text}
              </a>
            </li>
          )
        })
      }

      <li class="drop-wrapper">
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="24"
          height="24"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"><path d="m6 9 6 6 6-6"></path></svg
        >
        <ul class="dropdown">
          {
            dropLinks.map(link => {
              const text = link.href.split("/")[1]
              return (
                <li>
                  <a
                    class={Astro.url.pathname.includes(link.href) && "active"}
                    href={link.href}
                  >
                    {text}
                  </a>
                </li>
              )
            })
          }
        </ul>
      </li>
    </ul>
  </div>
</nav>

<style>
  .cs-logo {
    position: relative;
    width: 350px;
    height: 45px;
    margin-right: 0.3rem;
  }
  .cs-logo img {
    top: 0;
    left: 0;
    position: absolute;
    width: 100%;
    height: 100%;
    transition: var(--transition);
    vertical-align: middle;
    object-fit: contain;
  }
  html .cs-logo img.white,
  html.dark .cs-logo img.black {
    visibility: hidden;
    opacity: 0;
  }
  html.dark .cs-logo img.white {
    visibility: visible;
    opacity: 1;
  }

  .theme {
    cursor: pointer;
    margin-left: auto;
    /* display: flex; */
    position: relative;
    width: 24px;
    height: 26px;
    overflow: hidden;
    /* flex-shrink: 0; */
  }
  .theme .inner svg {
    vertical-align: bottom;
  }
  .theme .inner {
    position: absolute;
    top: -100%;
    left: 0;
    transition: var(--transition);
  }
  .theme .inner.dark {
    top: 0;
  }

  nav {
    border-bottom: 1px solid var(--border);
  }
  nav .container {
    padding-block: 1rem;
  }
  nav img {
    width: 350px;
    height: auto;
  }
  .hamburger {
    display: none;
  }
  html.dark nav .hamburger svg {
    stroke: #fff;
  }
  nav > div {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }
  nav .navUl {
    display: flex;
    list-style: none;
    text-transform: capitalize;
  }
  nav ul li a {
    padding: 0.5rem 1rem;
    text-decoration: none;
    color: currentColor;
    font-weight: bold;
    opacity: 0.8;

    transition: var(--transition);
  }
  nav ul li a.active,
  nav ul li a:hover {
    color: var(--accent);
    opacity: 1;
  }

  .drop-wrapper {
    padding-left: 1rem;
    position: relative;
    cursor: pointer;
  }
  .drop-wrapper svg {
    vertical-align: middle;
    stroke: var(--accent);
  }
  .dropdown {
    border-radius: 0.3rem;
    position: absolute;
    width: 20rem;
    border: 1px solid var(--border);
    top: 102%;
    right: 0;
    background-color: var(--bg);
    list-style: none;
    visibility: hidden;
    pointer-events: none;
    opacity: 0;
    transition: var(--transition);
    box-shadow: 0 10px 20px var(--box-shadow);
    z-index: 2;
  }
  .drop-wrapper:hover .dropdown {
    visibility: visible;
    pointer-events: all;
    opacity: 1;
  }
  .dropdown a {
    display: block;
  }

  @media (max-width: 768px) {
    nav {
      position: relative;
    }
    .container {
      gap: 0.3rem;
    }
    .hamburger {
      display: flex;
    }
    .hamburger svg line {
      transition: var(--transition);
    }
    .hamburger svg line:nth-child(1) {
      transform-origin: center;
    }
    .hamburger svg line:nth-child(2) {
      transform-origin: left;
    }
    .hamburger.active svg line:nth-child(1) {
      transform: rotate(45deg) translate(0, 0);
    }
    .hamburger.active svg line:nth-child(2) {
      transform: rotate(-45deg) translate(-1.8px, 4.2px);
    }

    nav .navUl {
      position: absolute;
      flex-direction: column;
      background-color: var(--bg);
      width: 100%;
      border-block: 1px solid var(--border);
      left: 0;
      top: 100%;
      visibility: hidden;
      pointer-events: none;
      opacity: 0;
      transition: var(--transition);
      box-shadow: 0 10px 20px var(--box-shadow);
      padding-block: 0.5rem;
    }
    nav .navUl.active {
      visibility: visible;
      pointer-events: all;
      opacity: 1;
      z-index: 2;
    }
    nav ul li a {
      display: block;
    }

    .drop-wrapper {
      padding: 0;
      cursor: none;
    }
    .drop-wrapper svg {
      display: none;
    }
    .dropdown {
      position: static;
      visibility: visible;
      opacity: 1;
      border: none;
      box-shadow: none;
      width: 100%;
    }
    .navUl.active .dropdown {
      pointer-events: all;
    }
  }
  @media (max-width: 914px) {
    .cs-logo {
      max-width: 250px;
      max-height: 31px;
    }
  }
</style>

<script>
  const ham = document.querySelector<HTMLDivElement>(".hamburger")
  ham.onclick = () => {
    ham.classList.toggle("active")
    document
      .querySelector<HTMLUListElement>("nav ul")
      .classList.toggle("active")
  }

  //sun
  document.querySelector<HTMLOrSVGImageElement>(".sun").onclick = e => {
    document.documentElement.classList.remove("dark")
    document
      .querySelector<HTMLDivElement>(".theme .inner")
      .classList.remove("dark")
    localStorage.setItem("theme", "light")
  }

  //moon
  document.querySelector<HTMLOrSVGImageElement>(".moon").onclick = e => {
    document.documentElement.classList.add("dark")
    document
      .querySelector<HTMLDivElement>(".theme .inner")
      .classList.add("dark")
    localStorage.setItem("theme", "dark")
  }
</script>
