// Generated by Xata Codegen 0.28.0. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "Courses",
    columns: [
      { name: "Name", type: "string", unique: true },
      { name: "Slug", type: "string", unique: true },
      { name: "Syllabus", type: "json" },
    ],
  },
  {
    name: "Programs",
    columns: [
      { name: "Title", type: "string", unique: true },
      { name: "Description", type: "text" },
      { name: "Requirement", type: "text" },
      { name: "Slug", type: "string", unique: true },
    ],
  },
  {
    name: "Peoples",
    columns: [
      { name: "Name", type: "string", unique: true },
      { name: "Designation", type: "string" },
      { name: "Courses_Summer", type: "string" },
      { name: "Courses_Winter", type: "string" },
    ],
  },
  {
    name: "Resources",
    columns: [
      { name: "Category", type: "text" },
      { name: "Title", type: "text" },
      { name: "Url", type: "text" },
      { name: "Description", type: "text" },
      { name: "SubCategory", type: "text" },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Courses = InferredTypes["Courses"];
export type CoursesRecord = Courses & XataRecord;

export type Programs = InferredTypes["Programs"];
export type ProgramsRecord = Programs & XataRecord;

export type Peoples = InferredTypes["Peoples"];
export type PeoplesRecord = Peoples & XataRecord;

export type Resources = InferredTypes["Resources"];
export type ResourcesRecord = Resources & XataRecord;

export type DatabaseSchema = {
  Courses: CoursesRecord;
  Programs: ProgramsRecord;
  Peoples: PeoplesRecord;
  Resources: ResourcesRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL: import.meta.env.XATA_DATABASE_URL,
  branch: import.meta.env.XATA_BRANCH,
  apiKey: import.meta.env.XATA_API_KEY
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};

export const xata = getXataClient()
